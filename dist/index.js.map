{
  "version": 3,
  "sources": ["../lib/ndarray.js", "../lib/dsem.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar dsempn = require( '@stdlib/stats-base-dsempn' ).ndarray;\n\n\n// MAIN //\n\n/**\n* Computes the standard error of the mean for a double-precision floating-point strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {Float64Array} x - input array\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {number} standard error of the mean\n*\n* @example\n* var Float64Array = require( '@stdlib/array-float64' );\n*\n* var x = new Float64Array( [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ] );\n*\n* var v = dsem( 4, 1, x, 2, 1 );\n* // returns 1.25\n*/\nfunction dsem( N, correction, x, strideX, offsetX ) {\n\treturn dsempn( N, correction, x, strideX, offsetX );\n}\n\n\n// EXPORTS //\n\nmodule.exports = dsem;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar stride2offset = require( '@stdlib/strided-base-stride2offset' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\n/**\n* Computes the standard error of the mean for a double-precision floating-point strided array.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {Float64Array} x - input array\n* @param {integer} strideX - stride length\n* @returns {number} standard error of the mean\n*\n* @example\n* var Float64Array = require( '@stdlib/array-float64' );\n*\n* var x = new Float64Array( [ 1.0, -2.0, 2.0 ] );\n*\n* var v = dsem( x.length, 1, x, 1 );\n* // returns ~1.20185\n*/\nfunction dsem( N, correction, x, strideX ) {\n\treturn ndarray( N, correction, x, strideX, stride2offset( N, strideX ) );\n}\n\n\n// EXPORTS //\n\nmodule.exports = dsem;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar dsem = require( './dsem.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( dsem, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = dsem;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the standard error of the mean for a double-precision floating-point strided array.\n*\n* @module @stdlib/stats-base-dsem\n*\n* @example\n* var Float64Array = require( '@stdlib/array-float64' );\n* var dsem = require( '@stdlib/stats-base-dsem' );\n*\n* var x = new Float64Array( [ 1.0, -2.0, 2.0 ] );\n*\n* var v = dsem( x.length, 1, x, 1 );\n* // returns ~1.20185\n*\n* @example\n* var Float64Array = require( '@stdlib/array-float64' );\n* var dsem = require( '@stdlib/stats-base-dsem' );\n*\n* var x = new Float64Array( [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ] );\n*\n* var v = dsem.ndarray( 4, 1, x, 2, 1 );\n* // returns 1.25\n*/\n\n// MODULES //\n\nvar join = require( 'path' ).join;\nvar tryRequire = require( '@stdlib/utils-try-require' );\nvar isError = require( '@stdlib/assert-is-error' );\nvar main = require( './main.js' );\n\n\n// MAIN //\n\nvar dsem;\nvar tmp = tryRequire( join( __dirname, './native.js' ) );\nif ( isError( tmp ) ) {\n\tdsem = main;\n} else {\n\tdsem = tmp;\n}\n\n\n// EXPORTS //\n\nmodule.exports = dsem;\n\n// exports: { \"ndarray\": \"dsem.ndarray\" }\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAS,QAAS,2BAA4B,EAAE,QAuBpD,SAASC,EAAMC,EAAGC,EAAYC,EAAGC,EAASC,EAAU,CACnD,OAAON,EAAQE,EAAGC,EAAYC,EAAGC,EAASC,CAAQ,CACnD,CAKAP,EAAO,QAAUE,ICpDjB,IAAAM,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAgB,QAAS,oCAAqC,EAC9DC,EAAU,IAsBd,SAASC,EAAMC,EAAGC,EAAYC,EAAGC,EAAU,CAC1C,OAAOL,EAASE,EAAGC,EAAYC,EAAGC,EAASN,EAAeG,EAAGG,CAAQ,CAAE,CACxE,CAKAP,EAAO,QAAUG,ICpDjB,IAAAK,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAc,QAAS,uDAAwD,EAC/EC,EAAO,IACPC,EAAU,IAKdF,EAAaC,EAAM,UAAWC,CAAQ,EAKtCH,EAAO,QAAUE,ICYjB,IAAIE,EAAO,QAAS,MAAO,EAAE,KACzBC,EAAa,QAAS,2BAA4B,EAClDC,EAAU,QAAS,yBAA0B,EAC7CC,EAAO,IAKPC,EACAC,EAAMJ,EAAYD,EAAM,UAAW,aAAc,CAAE,EAClDE,EAASG,CAAI,EACjBD,EAAOD,EAEPC,EAAOC,EAMR,OAAO,QAAUD",
  "names": ["require_ndarray", "__commonJSMin", "exports", "module", "dsempn", "dsem", "N", "correction", "x", "strideX", "offsetX", "require_dsem", "__commonJSMin", "exports", "module", "stride2offset", "ndarray", "dsem", "N", "correction", "x", "strideX", "require_main", "__commonJSMin", "exports", "module", "setReadOnly", "dsem", "ndarray", "join", "tryRequire", "isError", "main", "dsem", "tmp"]
}
